---
- name: Verify
  hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: '{{ ansible_playbook_python }}'
  tasks:
      - block:
        - name: 'TEST: mbs-frontend.configmap'
          k8s_info:
            api_version: v1
            kind: ConfigMap
            namespace: "{{ namespace }}"
            name: mbs-frontend-configmap
          register: mbs_configmap
        - assert:
            that:
              - mbs_configmap.resources|length == 1
              - mbs_configmap.resources[0].metadata.labels['app'] == 'mbs-frontend'
              - "'httpd.conf' in mbs_configmap.resources[0].data"

      - block:
        - name: 'TEST: mbs-frontend.mbs-configmap'
          k8s_info:
            api_version: v1
            kind: ConfigMap
            namespace: "{{ namespace }}"
            name: mbs-configmap
          register: mbs_configmap
        - assert:
            that:
              - mbs_configmap.resources|length == 1
              - "'default_module_f32.yml' in mbs_configmap.resources[0].data"
              - "'koji.conf' in mbs_configmap.resources[0].data"
              - "'config.py' in mbs_configmap.resources[0].data"

      - block:
          - name: 'TEST: mbs-frontend.secret.client-cert'
            k8s_info:
              api_version: v1
              kind: Secret
              namespace: "{{ namespace }}"
              name: mbs-frontend-client-cert 
            register: mbsfrontend_client_secrets
          - assert:
              that:
                - mbsfrontend_client_secrets.resources|length == 1
                - mbsfrontend_client_secrets.resources[0].metadata.labels['app'] == 'mbs-frontend'
                - "'tls.crt' in mbsfrontend_client_secrets.resources[0].data"
                - "'tls.key' in mbsfrontend_client_secrets.resources[0].data"
                - "'tls.pem' in mbsfrontend_client_secrets.resources[0].data"

      - block:
          - name: 'TEST: mbs-frontend.secret.mbs-frontend-service-cert'
            k8s_info:
              api_version: v1
              kind: Secret
              namespace: "{{ namespace }}"
              name: mbs-frontend-service-cert
            register: mbsfrontend_secrets
          - assert:
              that:
                - mbsfrontend_secrets.resources|length == 1                
                - mbsfrontend_secrets.resources[0].metadata.labels['app'] == 'mbs-frontend'
                - "'tls.crt' in mbsfrontend_secrets.resources[0].data"
                - "'tls.key' in mbsfrontend_secrets.resources[0].data"

      - block:
          - name: 'TEST: mbs-frontend.service'
            k8s_info:
              api_version: v1
              kind: Service
              namespace: "{{ namespace }}"
              name: mbs
            register: mbsfrontend_service
          - assert:
              that:
                - mbsfrontend_service.resources|length == 1
                - mbsfrontend_service.resources[0].metadata.labels['app'] == 'mbs-frontend'

      - block:
          - name: 'TEST: mbs-frontend.ingress.http'
            k8s_info:
              api_version: networking.k8s.io/v1beta1
              kind: Ingress
              namespace: "{{ namespace }}"
              name: mbs-frontend-http
            register: mbsfrontend_ingress
          - assert:
              that:
                - mbsfrontend_ingress.resources|length == 1
                - mbsfrontend_ingress.resources[0].metadata.labels['app'] == 'mbs-frontend'
